---
controllers:
  main:
    strategy: Recreate
    replicas: 1
    containers:
      main:
        image:
          repository: filebrowser/filebrowser
          pullPolicy: IfNotPresent
          tag: latest
        probes:
          readiness:
            enabled: true
          liveness:
            enabled: true
        env: {}

service:
  main:
    controller: main
    ports:
      http:
        port: 80 

ingress:
  main:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: {{ .Values.default_issuer }}
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: File manager 
      gethomepage.dev/group: Media
      gethomepage.dev/icon: filebrowser.png
      gethomepage.dev/name: Filebrowser 
      nginx.ingress.kubernetes.io/auth-signin: {{.Values.config.sso_auth_signin }}
      nginx.ingress.kubernetes.io/auth-url: {{ .Values.config.sso_auth_url }}?allowed_groups=media-admins,download-admins
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/server-snippet: |
        client_max_body_size 0;
    hosts:
      - host: &host "filebrowser.{{ .Values.domain }}"
        paths:
          - path: /
            service:
              identifier: main
    tls:
      - secretName: filebrowser-tls
        hosts:
          - *host

configMaps:
  settings:
    enabled: true 
    data:
      .filebrowser.json: |
        {
          "port": 80,
          "baseURL": "",
          "address": "",
          "log": "stdout",
          "database": "/config/database.db",
          "root": "/data"
        }

persistence:
  config:
    enabled: true 
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 1Gi
    globalMounts:
      - path: /config
    # dataSourceRef:
    #       kind: ReplicationDestination
    #       apiGroup: volsync.backube
    #       name: {{.Release.Name}}-config-dest 

  settings:
    enabled: true 
    type: configMap
    name: filebrowser-settings 
    advancedMounts:
      main:
        main:
          - path: /.filebrowser.json
            subPath: .filebrowser.json
  data:
    enabled: true
    type: persistentVolumeClaim
    existingClaim: {{ .Values.data_pvc }} 
    globalMounts:
      - path: /data


rawResources:
  config-source:
    apiVersion: volsync.backube/v1alpha1
    kind: ReplicationSource
    spec:
      spec:
        sourcePVC: {{.Release.Name }}-config
        trigger:
          schedule: "0 * * * *"
        rclone:
          rcloneConfigSection: "rclone-bucket"
          rcloneDestPath: "mazenet-volsync-backup-4/{{.Release.Name}}-config"
          rcloneConfig: "rclone-secret"
          copyMethod: Snapshot


  config-dest:
      apiVersion: volsync.backube/v1alpha1
      kind: ReplicationDestination
      spec:
        spec:
          trigger:
            manual: restore-backup-2
          rclone:
            rcloneConfigSection: "rclone-bucket"
            rcloneDestPath: "mazenet-volsync-backup-4/{{.Release.Name}}-config"
            rcloneConfig: "rclone-secret"
            copyMethod: Snapshot
            accessModes: [ReadWriteOnce]
            capacity: 1Gi
