---
controllers:
  main:
    strategy: Recreate
    replicas: 1
    containers:
      main:
        image:
          repository: ghcr.io/hotio/plex 
          pullPolicy: IfNotPresent
          tag: latest
        probes:
          readiness:
            enabled: true
          liveness:
            enabled: true
        env:
          # PLEX_CLAIM_TOKEN: claim-ZHku2vZtVrsHLjd9QWAB

service:
  main:
    controller: main
    ports:
      http:
        port: 32400 

ingress:
  main:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: {{ .Values.config.default_issuer }}
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: Media Server 
      gethomepage.dev/group: Media
      gethomepage.dev/icon: plex.png
      gethomepage.dev/name: Plex 
    tls:
      - secretName: plex-tls
        hosts:
          - plex.{{ .Values.config.domain }}
    hosts:
      - host: plex.{{ .Values.config.domain }}
        paths:
          - path: /
            service:
              identifier: main

persistence:
  config:
    enabled: true 
    type: persistentVolumeClaim
    retain: true
    accessMode: ReadWriteOnce
    size: 5Gi
    globalMounts:
      - path: /config

  # transcode:
  #   enabled: false
  #   type: persistentVolumeClaim
  #   globalMounts:
  #     - path: /transcode

  data:
    enabled: true
    type: persistentVolumeClaim
    existingClaim: nfs-media-pvc
    globalMounts:
      - path: /data
        # subPath:  
