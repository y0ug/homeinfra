---
controllers:
  main:
    strategy: Recreate
    replicas: 1
    containers:
      main:
        image:
          repository: adguard/adguardhome
          pullPolicy: IfNotPresent
          tag: v0.107.54


service:
  main:
    annotations:
      external-dns.alpha.kubernetes.io/hostname: adguardhome.{{.Values.domain}}
      metallb.universe.tf/loadBalancerIPs: 10.83.101.102,fd33:f4d4:cad1:101:10::102
    #ipFamilyPolicy: RequireDualStack
    ipFamilyPolicy: PreferDualStack
    controller: main
    type: LoadBalancer 
    externalTrafficPolicy: Local
    ports:
      http:
        port: 80 
      https:
        port: 443 
      dns-over-tls:
        port: 853 
        targetPort: 853
      dns-over-quic:
        port: 853 
        targetPort: 853
        protocol: UDP 
      dns-tcp:
        port: 53
        targetPort: 53
        protocol: TCP
      dns-udp:
        port: 53
        targetPort: 53
        protocol: UDP 



# ingress:
#   main:
#     enabled: true
#     className: nginx
#     annotations:
#       cert-manager.io/cluster-issuer: {{ .Values.default_issuer }}
#       gethomepage.dev/enabled: "true"
#       gethomepage.dev/description: DNS Management 
#       gethomepage.dev/group: Admin 
#       gethomepage.dev/icon: smoke-detector-variant.png
#       gethomepage.dev/name: ChangeDetection.io 
#       nginx.ingress.kubernetes.io/auth-signin: {{.Values.config.sso_auth_signin }}
#       nginx.ingress.kubernetes.io/auth-url: {{ .Values.config.sso_auth_url }}?allowed_groups=media-admins,download-admins
#     hosts:
#       - host: &host "changedetection.{{ .Values.domain }}"
#         paths:
#           - path: /
#             service:
#               identifier: main
#     tls:
#       - secretName: changedetection-tls
#         hosts:
#           - *host

persistence:
  config:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 10Gi
    globalMounts:
        - path: /opt/adguardhome/conf

  cert:
    enabled: true
    type: secret
    name: adguardhome-tls
    globalMounts:
        - path: /opt/adguardhome/certs

rawResources:
  certificate:
    apiVersion: cert-manager.io/v1
    kind: Certificate
    spec:
      spec:
        secretName: adguardhome-tls
        dnsNames:
          - adguardhome.int.mazenet.org
        issuerRef:
          name: {{.Values.default_issuer}} 
          kind: ClusterIssuer

#
#   rclone-secret:
#     apiVersion: external-secrets.io/v1beta1
#     kind: ExternalSecret
#     spec:
#       spec:
#         refreshInterval: 60s
#         secretStoreRef:
#           kind: ClusterSecretStore
#           name: external-secrets-secret-store-scw
#         target:
#           name: rclone-secret
#           creationPolicy: Owner
#         dataFrom:
#           - extract:
#               key: path:/k8s/prod/core/volsync-rclone
#               version: latest_enabled
#
#
#
#   config-source:
#     apiVersion: volsync.backube/v1alpha1
#     kind: ReplicationSource
#     spec:
#       spec:
#         sourcePVC: {{.Release.Name }}-datastore
#         trigger:
#           schedule: "8 * * * *"
#         rclone:
#           rcloneConfigSection: "rclone-bucket"
#           rcloneDestPath: "mazenet-volsync-backup-4/{{.Release.Name}}-datastore"
#           rcloneConfig: "rclone-secret"
#           copyMethod: Snapshot
#
#     # config-dest:
#     #   apiVersion: volsync.backube/v1alpha1
#     #   kind: ReplicationDestination
#     #   spec:
#     #     spec:
#     #       trigger:
#     #         manual: restore-backup-2
#     #       rclone:
#     #         rcloneConfigSection: "rclone-bucket"
#     #         rcloneDestPath: "mazenet-volsync-backup-4/{{.Release.Name}}-datastore"
#     #         rcloneConfig: "rclone-secret"
#     #         copyMethod: Snapshot
#     #         accessModes: [ReadWriteOnce]
#     #         capacity: 1Gi
#

